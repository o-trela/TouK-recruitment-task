plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'pl.touk.recruitmenttask'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

compileJava {
	options.compilerArgs << '-parameters'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.6'
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.13.2'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.6.7'

	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	testRuntimeOnly group: 'org.eclipse', name: 'yasson', version: '1.0.1'
	testRuntimeOnly group: 'org.glassfish', name: 'javax.json', version: '1.1.2'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.mockito:mockito-core:3.+"
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'

	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

task generateSeats() {
	doLast {
		File dataSql = file("src/main/resources/data.sql")
		dataSql.write("")

		int no_rooms = 3
		int[] no_seats = new int[no_rooms]
		no_seats[0] = 150
		no_seats[1] = 130
		no_seats[2] = 135
		int counter = 1;

		for (int i = 0; i < no_rooms; i++) {
			for (int j = 0; j < no_seats[i]; j++) {
				int row_num = (int) Math.floor(j / 10) + 1
				int seat_num = (int) j % 10 + 1
				dataSql.append("INSERT INTO Seat(id, row_num, number, id_room) " +
						"VALUES (${counter}, ${row_num}, ${seat_num}, ${i + 1});\n")
				counter++
			}
		}
	}
}
